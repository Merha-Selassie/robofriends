{"version":3,"sources":["components/Card.js","components/CardList.js","components/ErrorBoundary.js","components/Scroll.js","components/SearchBox.js","components/Home.js","Actions.js","constants.js","containers/App.js","registerServiceWorker.js","reducers.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","console","log","map","user","i","components_Card","key","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","children","Component","Scroll","style","overflowY","border","height","SearchBox","searchField","searchChange","aria-label","type","placeholder","onChange","Home","onRequestRobots","_this$props","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","connect","searchRobots","requestRobots","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","App","components_Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialStateSearch","initialStateRobots","initialStateRobot","rootReducer","createLogger","combineReducers","arguments","length","undefined","action","assign","requestRobot","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_containers_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a964f87a.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id}) => {\n\n\treturn (\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?size=200x200`}/>\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n\tconsole.log('CardList');\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\trobots.map((user, i) => {\n\t\t\t\treturn  (\n\t\t\t\t\t// <a href={`/detail/${robots[i].id}`}>\n\t\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\t\t\temail={robots[i].email}/>\n\t\t\t\t\t\t// </a>\n\t\t\t\t\t);\t\n\t\t\t\t})\n\t\t\t}\t\n\t\t</div>\n\t);\n}\n\nexport default CardList;","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\tthis.setState({hasError: true})\n\t}\n\n\trender() {\n\t\tif(this.state.hasError){\n\t\t\treturn <h1>Oooops. That is not good</h1>\n\t\t}\n\n\t\treturn this.props.children\n\t}\n}\n\n\nexport default ErrorBoundary;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n}\n\nexport default Scroll;","import React from 'react';\n\nconst SearchBox = ({searchField, searchChange}) => {\n\tconsole.log('SearchBox');\n\treturn (\n\n\t\t<div className='pa2'>\n\t\t\t<input \n\t\t\t\taria-label='Search robots'\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue' \n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='search robot'\n\t\t\t\tonChange={searchChange}\n\t\t\t />\n\t\t</div>\n\t);\n\t\n}\n\nexport default SearchBox;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requestRobots, setSearchField } from '../Actions';\nimport CardList from './CardList';\nimport ErrorBoundary from './ErrorBoundary';\nimport Scroll from './Scroll';\nimport SearchBox from './SearchBox';\n\n\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tsearchField: state.searchRobots.searchField,\n\t\trobots: state.requestRobots.robots,\n\t\tisPending: state.requestRobots.isPending,\n\t\terror: state.requestRobots.error\n\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n\t\tonRequestRobots: () => dispatch(requestRobots())\n\t}\n}\n\nclass Home extends Component {\n\n\tcomponentDidMount(){\n\t\tthis.props.onRequestRobots();\n\t}\n\n\n\trender() {\n\t\tconst { searchField, onSearchChange, robots, isPending } = this.props;\n\t\tconst filteredRobots = robots.filter(robot => {\n\t\t\t\n\t\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\n\t\t})\n\n\t\t//Ternary \n\t\treturn isPending ?\n\t\t\t<h1 className=\"tc fl w-100 pv7\">Loading</h1> : \n\t\t\t(\n\t\t\t\t<div className='tc'>\n\t\t\t\t\t{/* <Header /> */}\n\t\t\t\t\t<SearchBox searchChange={onSearchChange}/>\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t<CardList robots={filteredRobots}/>\t\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n\t\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n\n","import { \n\t\t\tCHANGE_SEARCH_FIELD,\n\t\t\tREQUEST_ROBOTS_PENDING,\n\t\t\tREQUEST_ROBOTS_SUCCESS,\n\t\t\tREQUEST_ROBOTS_FAILED\n\t\t} from './constants.js';\n\nexport const setSearchField = (text) => {\n\treturn {\n\t\ttype: CHANGE_SEARCH_FIELD,\n\t\tpayload: text\n\t}\n}\n\nexport const requestRobots = () =>  (dispatch) => {\n\tdispatch({ type: REQUEST_ROBOTS_PENDING });\n\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response=> response.json())\n\t\t\t.then(data => dispatch( { type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n\t\t\t.catch(error => dispatch( { type: REQUEST_ROBOTS_FAILED, payload: error }));\n}\n\nexport const requestRobot = (id) =>  (dispatch) => {\n\tdispatch({ type: REQUEST_ROBOTS_PENDING });\n\tfetch('https://jsonplaceholder.typicode.com/users/'+id)\n\t\t\t.then(response=> response.json())\n\t\t\t.then(data => dispatch( { type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n\t\t\t.catch(error => dispatch( { type: REQUEST_ROBOTS_FAILED, payload: error }));\n}","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\n\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import React, { Component } from 'react';\nimport Home from '../components/Home';\nimport './App.css';\n\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Home/>\n\t\t)\n\t\t\n\t}\n\t\n}\n\nexport default App;\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { \n\t\t\tCHANGE_SEARCH_FIELD,\n\t\t\tREQUEST_ROBOTS_PENDING,\n\t\t\tREQUEST_ROBOTS_SUCCESS,\n\t\t\tREQUEST_ROBOTS_FAILED\n\t\t} from './constants.js';\n\n\nconst initialStateSearch = {\n\tsearchField: ''\n}\n\nexport const searchRobots = (state=initialStateSearch, action={}) => {\n\tswitch(action.type) {\n\t\tcase CHANGE_SEARCH_FIELD:\n\t\t\treturn Object.assign({}, state, {searchField: action.payload});\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nconst initialStateRobots = {\n\tisPending: false,\n\trobots: [],\n\terror: ''\n}\n\nexport const requestRobots = (state=initialStateRobots, action={}) => {\n\tswitch(action.type) {\n\t\tcase REQUEST_ROBOTS_PENDING:\n\t\t\treturn Object.assign({}, state, {isPending: true});\n\t\tcase REQUEST_ROBOTS_SUCCESS:\n\t\t\treturn Object.assign({}, state, {robots: action.payload, isPending: false});\n\t\tcase REQUEST_ROBOTS_FAILED:\n\t\t\treturn Object.assign({}, state, {error: action.payload, isPending: false});\t\n\t\tdefault:\n\t\t\treturn state;\n\t}\t\t\n}\n\nconst initialStateRobot = {\n\tisPending: false,\n\trobot: '',\n\terror: ''\n}\n\nexport const requestRobot = (state=initialStateRobot, action={}) => {\n\tswitch(action.type) {\n\t\tcase REQUEST_ROBOTS_PENDING:\n\t\t\treturn Object.assign({}, state, {isPending: true});\n\t\tcase REQUEST_ROBOTS_SUCCESS:\n\t\t\treturn Object.assign({}, state, {robot: action.payload, isPending: false});\n\t\tcase REQUEST_ROBOTS_FAILED:\n\t\t\treturn Object.assign({}, state, {error: action.payload, isPending: false});\t\n\t\tdefault:\n\t\t\treturn state;\n\t}\t\t\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { searchRobots, requestRobots, requestRobot } from './reducers';\nimport 'tachyons';\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({ searchRobots, requestRobots, requestRobot })\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t\t\n\t, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}